{{- /*
 *  ICOS Scaphandre
 *  Copyright Â© 2022-2024 National and Kapodistrian University of Athens
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 *  This work has received funding from the European Union's HORIZON research 
 *  and innovation programme under grant agreement No. 101070177.
 */ -}}

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "scaphandre.name" . }}
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "scaphandre.name" . }}
  template:
    metadata:
      name: {{ template "scaphandre.name" . }}
      labels:
        {{- include "labels.common" . | nindent 8 }}
      annotations:
        {{- toYaml .Values.annotations | nindent 8 }}
    spec:
      containers:
      - name:  {{ template "scaphandre.name" . }}
        image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
        args:
            # - "--vm"
            {{- range $key, $value := .Values.scaphandre.args }}
            {{- if $value }}
            - --{{ $key }}={{ $value }}
            {{- else }}
            - --{{ $key }}
            {{- end }}
            {{- end }}
            - {{ .Values.scaphandre.command }}
            {{- range $key, $value := .Values.scaphandre.extraArgs }}
            {{- if $value }}
            - --{{ $key }}={{ $value }}
            {{- else }}
            - --{{ $key }}
            {{- end }}
            {{- end }}
        env:
        {{- if .Values.scaphandre.rustBacktrace }}
        - name: RUST_BACKTRACE
          value: '{{ .Values.scaphandre.rustBacktrace }}'
        {{- end }}
        ports:
        - name: metrics
          containerPort: {{ .Values.port }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - mountPath: /proc
          name: proc
          readOnly: false
        - mountPath: /sys/class/powercap
          name: powercap
          readOnly: false
        livenessProbe:
          httpGet:
            path: /metrics
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 60
          timeoutSeconds: 9
          failureThreshold: 5
        securityContext:
          privileged: true
          runAsUser: {{ .Values.userID }}
          runAsGroup: {{ .Values.userGroup }}
      serviceAccountName: {{ template "scaphandre.name" . }}
      tolerations:
      # Tolerate all taints for observability
      - operator: "Exists"
      volumes:
      - hostPath:
          path: /proc
          type: "Directory"
        name: proc
      - hostPath:
          path: /sys/class/powercap
          type: "Directory"
        name: powercap
