{{- /*
 *  ICOS Scaphandre
 *  Copyright Â© 2022-2024 National and Kapodistrian University of Athens
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 *  This work has received funding from the European Union's HORIZON research 
 *  and innovation programme under grant agreement No. 101070177.
 */ -}}

apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-node-cpu-arch-pre-install"
  labels:
    {{- include "labels.common" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
spec:
  template:
    spec:
      containers:
      - name: main
        image: bitnami/kubectl:latest
        command:
        - "/bin/bash"
        - "-c"
        args:
        - |
          ALL_NODES=$(kubectl get nodes -o jsonpath='{.items[*].metadata.name}')
          TOTAL_NODES=$(echo "$ALL_NODES" | wc -w)
          ARM_NODES=0
          ARM_NODE_NAMES=""

          for NODE in $ALL_NODES; do
            NODE_ARCH=$(kubectl get node $NODE -o jsonpath='{.metadata.labels.kubernetes\.io/arch}')
            echo "Node $NODE architecture is: $NODE_ARCH"
            
            # Check if the node architecture is ARM or ARM-like
            if [[ "$NODE_ARCH" == "arm64" || "$NODE_ARCH" == "arm" ]]; then
              ARM_NODES=$((ARM_NODES + 1))
              ARM_NODE_NAMES="$ARM_NODE_NAMES $NODE"
            fi
          done
          
          # Display ARM nodes if any
          if [ $ARM_NODES -gt 0 ]; then
            echo "ARM architecture nodes: $ARM_NODE_NAMES"
          fi

          # Only fail if all nodes are ARM or ARM-like architectures
          if [ $ARM_NODES -eq $TOTAL_NODES ]; then
            echo "Test failed: All nodes are on ARM or ARM-like architectures."
            exit 1
          else
            echo "All or some nodes have non-ARM architectures."
            exit 0
          fi
      restartPolicy: Never
  backoffLimit: 1
